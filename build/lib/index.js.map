{"version":3,"sources":["../../src/lib/index.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG;;AAExB,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/B,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;IACnD,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;EAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;EACZ,MAAM,CAAC;AACT;;AAEA,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;EACjB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;EACxB,CAAC,KAAK,CAAC;AACT,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;AAEV,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC;EACpC,IAAI;EACJ,KAAK;EACL,MAAM;EACN,QAAQ;AACV,CAAC,CAAC,CAAC;EACD,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACR,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU;EAC1B;EACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;EACnB,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAClE,OAAO,CAAC,CAAC,CAAC;IACV,IAAI;IACJ,MAAM;EACR,CAAC;EACD,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM;IACpC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG;EACrB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;IAC5C,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO;EAC9B,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC5B,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;EAC7D;EACA,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC;AACpD","file":"lib/index.js","sourcesContent":["import { aqt } from 'rqt'\n\nconst reduceErrors = (errors) => {\n  const reduced = errors.reduce((acc, error) => {\n    const errMsg = `${error.resource}: ${error.message}`\n    return `${errMsg}\\n${acc}`\n  }, '').trim()\n  return reduced\n}\n\nconst USER_AGENT = [\n  'Mozilla/5.0',\n  '(Node.js; @rqt/github)',\n  'https://github.com/rqt/github',\n].join(' ')\n\nexport default async function request({\n  data,\n  token,\n  method,\n  endpoint,\n}) {\n  const h = {\n    Authorization: `token ${token}`,\n    'User-Agent': USER_AGENT,\n  }\n  const url = `https://api.github.com${endpoint}`\n  const { body, headers, statusCode, statusMessage } = await aqt(url, {\n    headers: h,\n    data,\n    method,\n  })\n  if (Array.isArray(body.errors)){\n    const err = reduceErrors(body.errors)\n    throw new Error(err)\n  } else if (body.message == 'Bad credentials') {\n    throw new Error(body.message)\n  } else if (statusCode == 403) {\n    throw new Error(`${body.message} ${body.documentation_url}`)\n  }\n  return { body, headers, statusMessage, statusCode }\n}"]}