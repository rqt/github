{"version":3,"sources":["../../../src/api/repos/create.js"],"names":[],"mappings":";;;;;;;;;;;AAWA,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;EAC7B,KAAK,CAAC;IACJ,GAAG;IACH,IAAI;IACJ,WAAW;IACX,QAAQ;IACR,gBAAgB;IAChB,kBAAkB;IAClB,SAAS,CAAC,CAAC,CAAC,KAAK;EACnB,CAAC,CAAC,CAAC,CAAC;EACJ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;EACrC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK;EAC7B,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;IACnC,IAAI,CAAC,CAAC;MACJ,IAAI;MACJ,WAAW;MACX,QAAQ;MACR,kBAAkB;MAClB,gBAAgB;MAChB,SAAS;IACX,CAAC;IACD,QAAQ;EACV,CAAC;;EAED,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACV,MAAM,CAAC;AACT;;AAEA,MAAM,CAAC,OAAO,CAAC","file":"api/repos/create.js","sourcesContent":["/**\n * Create a new repository for the authenticated user.\n * @param {CreateRepository} options Options to create a repository.\n * @param {string} [options.org] The organisation on which to create the repository (if not adding to the user account).\n * @param {string} options.name The name of the repository.\n * @param {string} [options.description] A short description of the repository.\n * @param {string} [options.homepage] A URL with more information about the repository.\n * @param {string} [options.license_template] Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the license_template string. For example, \"mit\" or \"mpl-2.0\".\n * @param {string} [options.gitignore_template] Desired language or platform .gitignore template to apply. Use the name of the template without the extension. For example, \"Haskell\".\n * @param {boolean} [options.auto_init=false] Pass `true` to create an initial commit with empty README. Default `false`.\n */\nasync function create(options) {\n  const {\n    org,\n    name,\n    description,\n    homepage,\n    license_template,\n    gitignore_template,\n    auto_init = false,\n  } = options\n  const p = org ? `orgs/${org}` : 'user'\n  const endpoint = `/${p}/repos`\n  const { body } = await this._request({\n    data: {\n      name,\n      description,\n      homepage,\n      gitignore_template,\n      license_template,\n      auto_init,\n    },\n    endpoint,\n  })\n  /** @type {Repository} */\n  const r = body\n  return r\n}\n\nexport default create\n\n/* documentary types/api/repos/create.xml */\n/**\n * @typedef {Object} CreateRepository Options to create a repository.\n * @prop {string} [org] The organisation on which to create the repository (if not adding to the user account).\n * @prop {string} name The name of the repository.\n * @prop {string} [description] A short description of the repository.\n * @prop {string} [homepage] A URL with more information about the repository.\n * @prop {string} [license_template] Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the license_template string. For example, \"mit\" or \"mpl-2.0\".\n * @prop {string} [gitignore_template] Desired language or platform .gitignore template to apply. Use the name of the template without the extension. For example, \"Haskell\".\n * @prop {boolean} [auto_init=false] Pass `true` to create an initial commit with empty README. Default `false`.\n */\n\n\n/* documentary types/Owner.xml */\n/**\n * @typedef {Object} Owner\n * @prop {string} login octocat\n * @prop {number} id 1\n * @prop {string} node_id MDQ6VXNlcjE=\n * @prop {string} avatar_url https://github.com/images/error/octocat_happy.gif\n * @prop {string} gravatar_id </prop>\n    <prop string name=\"url\">https://api.github.com/users/octocat\n * @prop {string} html_url https://github.com/octocat\n * @prop {string} followers_url https://api.github.com/users/octocat/followers\n * @prop {string} following_url https://api.github.com/users/octocat/following{/other_user}\n * @prop {string} gists_url https://api.github.com/users/octocat/gists{/gist_id}\n * @prop {string} starred_url https://api.github.com/users/octocat/starred{/owner}{/repo}\n * @prop {string} subscriptions_url https://api.github.com/users/octocat/subscriptions\n * @prop {string} organizations_url https://api.github.com/users/octocat/orgs\n * @prop {string} repos_url https://api.github.com/users/octocat/repos\n * @prop {string} events_url https://api.github.com/users/octocat/events{/privacy}\n * @prop {string} received_events_url https://api.github.com/users/octocat/received_events\n * @prop {string} type User\n * @prop {boolean} site_admin false\n */\n\n/* documentary types/api/repos/Repository.xml */\n/**\n * @typedef {Object} Repository\n * @prop {number} id 1296269\n * @prop {string} node_id MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n * @prop {string} name Hello-World\n * @prop {string} full_name octocat/Hello-World\n * @prop {boolean} private false\n * @prop {string} html_url https://github.com/octocat/Hello-World\n * @prop {string} description This your first repo!\n * @prop {boolean} fork true\n * @prop {string} url https://api.github.com/repos/octocat/Hello-World\n * @prop {string} archive_url http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n * @prop {string} assignees_url http://api.github.com/repos/octocat/Hello-World/assignees{/user}\n * @prop {string} blobs_url http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n * @prop {string} branches_url http://api.github.com/repos/octocat/Hello-World/branches{/branch}\n * @prop {string} collaborators_url http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n * @prop {string} comments_url http://api.github.com/repos/octocat/Hello-World/comments{/number}\n * @prop {string} commits_url http://api.github.com/repos/octocat/Hello-World/commits{/sha}\n * @prop {string} compare_url http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n * @prop {string} contents_url http://api.github.com/repos/octocat/Hello-World/contents/{+path}\n * @prop {string} contributors_url http://api.github.com/repos/octocat/Hello-World/contributors\n * @prop {string} deployments_url http://api.github.com/repos/octocat/Hello-World/deployments\n * @prop {string} downloads_url http://api.github.com/repos/octocat/Hello-World/downloads\n * @prop {string} events_url http://api.github.com/repos/octocat/Hello-World/events\n * @prop {string} forks_url http://api.github.com/repos/octocat/Hello-World/forks\n * @prop {string} git_commits_url http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n * @prop {string} git_refs_url http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n * @prop {string} git_tags_url http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n * @prop {string} git_url git:github.com/octocat/Hello-World.git\n * @prop {string} issue_comment_url http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n * @prop {string} issue_events_url http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n * @prop {string} issues_url http://api.github.com/repos/octocat/Hello-World/issues{/number}\n * @prop {string} keys_url http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n * @prop {string} labels_url http://api.github.com/repos/octocat/Hello-World/labels{/name}\n * @prop {string} languages_url http://api.github.com/repos/octocat/Hello-World/languages\n * @prop {string} merges_url http://api.github.com/repos/octocat/Hello-World/merges\n * @prop {string} milestones_url http://api.github.com/repos/octocat/Hello-World/milestones{/number}\n * @prop {string} notifications_url http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n * @prop {string} pulls_url http://api.github.com/repos/octocat/Hello-World/pulls{/number}\n * @prop {string} releases_url http://api.github.com/repos/octocat/Hello-World/releases{/id}\n * @prop {string} ssh_url git&#064;github.com:octocat/Hello-World.git\n * @prop {string} stargazers_url http://api.github.com/repos/octocat/Hello-World/stargazers\n * @prop {string} statuses_url http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n * @prop {string} subscribers_url http://api.github.com/repos/octocat/Hello-World/subscribers\n * @prop {string} subscription_url http://api.github.com/repos/octocat/Hello-World/subscription\n * @prop {string} tags_url http://api.github.com/repos/octocat/Hello-World/tags\n * @prop {string} teams_url http://api.github.com/repos/octocat/Hello-World/teams\n * @prop {string} trees_url http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n * @prop {string} clone_url https://github.com/octocat/Hello-World.git\n * @prop {string} mirror_url git:git.example.com/octocat/Hello-World\n * @prop {string} hooks_url http://api.github.com/repos/octocat/Hello-World/hooks\n * @prop {string} svn_url https://svn.github.com/octocat/Hello-World\n * @prop {string} homepage https://github.com\n * @prop {number} forks_count 9\n * @prop {number} stargazers_count 80\n * @prop {number} watchers_count 80\n * @prop {number} size 108\n * @prop {string} default_branch master\n * @prop {number} open_issues_count 0\n * @prop {boolean} has_issues true\n * @prop {boolean} has_projects true\n * @prop {boolean} has_wiki true\n * @prop {boolean} has_pages false\n * @prop {boolean} has_downloads true\n * @prop {boolean} archived false\n * @prop {string} pushed_at 2011-01-26T19:06:43Z\n * @prop {string} created_at 2011-01-26T19:01:12Z\n * @prop {string} updated_at 2011-01-26T19:14:43Z\n * @prop {boolean} allow_rebase_merge true\n * @prop {boolean} allow_squash_merge true\n * @prop {boolean} allow_merge_commit true\n * @prop {number} subscribers_count 42\n * @prop {number} network_count 0\n * @prop {string[]} topics [\"octocat\", \"atom\", \"electron\", \"API\"]\n * @prop {{admin: boolean, push: boolean, pull: boolean}} permissions\n * @prop {string} language\n * @prop {Owner} owner\n */\n"]}